---
- hosts: all
  vars:
    home_path: /home/ubuntu
    wfmash_version: v0.8.2
    seqwish_version: v0.7.5
    smoothxg_version: v0.6.4
    gfaffix_version: 0.1.3
    pggb_version: 0.3.1
    cactus_version: v2.1.0
    igv_version: 2.13.0
    snpeff_version: v4_3t
  tasks:
    - name: Download miniconda.
      ansible.builtin.get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh
        dest: /tmp/miniconda3.sh
        mode: 0744
    - name: Install miniconda.
      ansible.builtin.command: >
        /tmp/miniconda3.sh -b -f -p /home/ubuntu/miniconda3
      args:
        creates: /home/ubuntu/miniconda3/bin/conda
    - name: Install apt packages.
      become: true
      ansible.builtin.apt:
        update_cache: yes
        pkg: 
          - build-essential
          - cmake 
          - libgsl-dev
          - libhts-dev
          - libjemalloc-dev
          - libz-dev
          - libzstd-dev
          - python3-distutils 
          - python3-dev
          - pkg-config
          - unzip
    - name: Clone pangenie from github.
      ansible.builtin.git:
        repo: 'https://github.com/eblerjana/pangenie.git'
        dest: /home/ubuntu/pangenie
    - name: Install pangenie.
      command: /home/ubuntu/miniconda3/bin/conda env create -f environment.yml 
      args:
        chdir: /home/ubuntu/pangenie
        creates: /home/ubuntu/miniconda3/envs/pangenie/bin/cpp
    - name: Create build directory.
      ansible.builtin.file:
        path: '{{ home_path }}/pangenie/build'
        state: directory
        mode: '0755'
    - shell: source /home/ubuntu/miniconda3/etc/profile.d/conda.sh && conda activate pangenie && cmake .. && make
      args:
        executable: /bin/bash
        chdir: '{{ home_path }}/pangenie/build'
        creates: /home/ubuntu/pangenie/build/src/PanGenie
    - name: Clone minimap2 from github.
      ansible.builtin.git:
        repo: 'https://github.com/lh3/minimap2'
        dest: /home/ubuntu/minimap2
    - name: Build minimap2.
      command: make
      args: 
        chdir: /home/ubuntu/minimap2
        creates: /home/ubuntu/minimap2/minimap2
    - name: Clone miniasm from github.
      ansible.builtin.git:
        repo: 'https://github.com/lh3/miniasm'
        dest: /home/ubuntu/miniasm
    - name: Build miniasm.
      command: make
      args: 
        chdir: /home/ubuntu/miniasm
        creates: /home/ubuntu/miniasm/miniasm
    - name: Download vg.
      become: true
      get_url:
        url: https://github.com/vgteam/vg/releases/download/v1.41.0/vg
        dest: /usr/local/bin/vg
        owner: ubuntu
        mode: 0755
    - name: Download graphtyper2.
      become: true
      get_url:
        url: https://github.com/DecodeGenetics/graphtyper/releases/download/v2.7.4/graphtyper
        dest: /usr/local/bin/graphtyper
        owner: ubuntu
        mode: 0755
    - name: Get Bandage.
      ansible.builtin.get_url:
        url: https://github.com/rrwick/Bandage/releases/download/v0.8.1/Bandage_Ubuntu_dynamic_v0_8_1.zip
        dest: /tmp/Bandage.zip
        mode: 0744
    - name: Unzip Bandage.
      ansible.builtin.unarchive:
        src: /tmp/Bandage.zip
        dest: /tmp/
        remote_src: true
    - name: Copy Bandage to path.
      become: true
      ansible.builtin.copy:
        src: '/tmp/Bandage'
        dest: /usr/local/bin/Bandage
        remote_src: true
        owner: ubuntu
        group: ubuntu
        mode: '0755'
    - name: Install x server.
      become: true
      ansible.builtin.apt:
        pkg: 
          - xorg
          - qt5-default
    - name: Clone minigraph from github.
      ansible.builtin.git:
        repo: 'https://github.com/lh3/minigraph'
        dest: '{{ home_path }}/minigraph'
    - name: Build minigraph.
      command: make
      args: 
        chdir: '{{ home_path }}/minigraph'
        creates: '{{ home_path }}/minigraph/minigraph'
    - name: Copy minigraph to path.
      become: true
      ansible.builtin.copy:
        src: '{{ home_path }}/minigraph/minigraph'
        dest: /usr/local/bin/minigraph
        remote_src: true
        owner: ubuntu
        group: ubuntu
        mode: '0755'
    - name: Download seqwish.
      ansible.builtin.get_url:
        url: 'https://github.com/ekg/seqwish/releases/download/{{ seqwish_version }}/seqwish-{{ seqwish_version }}.tar.gz'
        dest: /tmp/seqwish.tar.gz
        owner: ubuntu
        mode: 0755
    - name: Unzip seqwish.
      ansible.builtin.unarchive:
        src: /tmp/seqwish.tar.gz
        dest: /tmp/
        remote_src: true
    - name: Make seqwish.
      ansible.builtin.command: cmake -H. -Bbuild 
      args:
        chdir: '/tmp/seqwish-{{ seqwish_version }}'
        creates: '/tmp/seqwish-{{ seqwish_version}}/build/Makefile'
    - name: Make seqwish 2.
      ansible.builtin.command: cmake --build build -- -j 3
      args:
        chdir: '/tmp/seqwish-{{ seqwish_version }}'
        creates: '/tmp/seqwish-{{ seqwish_version }}/bin/seqwish'
    - name: Copy seqwish to path.
      become: true
      ansible.builtin.copy:
        src: '/tmp/seqwish-{{ seqwish_version }}/bin/seqwish'
        dest: /usr/local/bin/seqwish
        remote_src: true
        owner: ubuntu
        group: ubuntu
        mode: '0755'
    - name: Download wfmash.
      ansible.builtin.get_url:
        url: 'https://github.com/waveygang/wfmash/releases/download/{{ wfmash_version }}/wfmash-{{ wfmash_version }}.tar.gz'
        dest: /tmp/wfmash.tar.gz
        owner: ubuntu
        mode: 0755
    - name: Unzip wfmash.
      ansible.builtin.unarchive:
        src: /tmp/wfmash.tar.gz
        dest: /tmp/
        remote_src: true
    - name: Make wfmash.
      ansible.builtin.command: cmake -H. -Bbuild 
      args:
        chdir: '/tmp/wfmash-{{ wfmash_version }}'
        creates: '/tmp/wfmash-{{ wfmash_version}}/build/Makefile'
    - name: Make wfmash 2.
      ansible.builtin.command: cmake --build build -- -j 3
      args:
        chdir: '/tmp/wfmash-{{ wfmash_version }}'
        creates: '/tmp/wfmash-{{ wfmash_version }}/build/bin/wfmash'
    - name: Copy wfmash to path.
      become: true
      ansible.builtin.copy:
        src: '/tmp/wfmash-{{ wfmash_version }}/build/bin/wfmash'
        dest: /usr/local/bin/wfmash
        remote_src: true
        owner: ubuntu
        group: ubuntu
        mode: '0755'
    - name: Download gfaffix.
      ansible.builtin.get_url:
        url: 'https://github.com/marschall-lab/GFAffix/releases/download/{{ gfaffix_version }}/GFAffix-{{  gfaffix_version }}_linux_x86_64.tar.gz'
        dest: /tmp/gfaffix.tar.gz
        mode: 0744
    - name: Unzip gfaffix.
      ansible.builtin.unarchive:
        src: /tmp/gfaffix.tar.gz
        dest: /tmp
        remote_src: true
    - name: Copy gfaffix to path.
      become: true
      ansible.builtin.copy:
        src: '/tmp/GFAffix-{{ gfaffix_version }}/gfaffix'
        dest: /usr/local/bin/gfaffix
        remote_src: true
        owner: ubuntu
        group: ubuntu
        mode: '0755'
    - name: Download pggb.
      ansible.builtin.get_url:
        url: 'https://github.com/pangenome/pggb/archive/refs/tags/v{{ pggb_version }}.tar.gz'
        dest: /tmp/pggb.tar.gz
        mode: 0744
    - name: Unzip pggb.
      ansible.builtin.unarchive:
        src: /tmp/pggb.tar.gz
        dest: /tmp
        remote_src: true
    - name: Copy pggb to path.
      become: true
      ansible.builtin.copy:
        src: '/tmp/pggb-{{ pggb_version }}/pggb'
        dest: /usr/local/bin/pggb
        remote_src: true
        owner: ubuntu
        group: ubuntu
        mode: '0755'
    - name: Download IGV.
      ansible.builtin.get_url:
        url: 'https://data.broadinstitute.org/igv/projects/downloads/2.13/IGV_Linux_{{ igv_version }}_WithJava.zip'
        dest: /tmp/igv.zip
        mode: 0744
    - name: Unzip IGV.
      ansible.builtin.unarchive:
        src: /tmp/igv.zip
        dest: '{{ home_path }}'
        remote_src: true
    - name: Make symlink for IGV.
      become: true
      ansible.builtin.file:
        src: '{{ home_path }}/IGV_Linux_{{ igv_version }}/igv.sh'
        path: '/usr/local/bin/IGV'
        state: link
        owner: ubuntu
    - name: Make symlink for java.
      become: true
      ansible.builtin.file:
        src: '{{ home_path }}/IGV_Linux_{{ igv_version }}/jdk-11/bin/java'
        path: '/usr/local/bin/java'
        state: link
        owner: ubuntu
